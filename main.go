package main

import (
	"bytes"
	"crypto/sha256"
	"fmt"
)

var clientInit = "000003bc1014550efd9608110238be57a25101436ffc000000ac637572766532353531392d7368613235362c637572766532353531392d736861323536406c69627373682e6f72672c656364682d736861322d6e697374703235362c656364682d736861322d6e697374703338342c656364682d736861322d6e697374703532312c6469666669652d68656c6c6d616e2d67726f757031342d7368613235362c6469666669652d68656c6c6d616e2d67726f757031342d736861312c6578742d696e666f2d630000018b7273612d736861322d3531322d636572742d763031406f70656e7373682e636f6d2c7273612d736861322d3235362d636572742d763031406f70656e7373682e636f6d2c7373682d7273612d636572742d763031406f70656e7373682e636f6d2c7373682d6473732d636572742d763031406f70656e7373682e636f6d2c65636473612d736861322d6e697374703235362d636572742d763031406f70656e7373682e636f6d2c65636473612d736861322d6e697374703338342d636572742d763031406f70656e7373682e636f6d2c65636473612d736861322d6e697374703532312d636572742d763031406f70656e7373682e636f6d2c7373682d656432353531392d636572742d763031406f70656e7373682e636f6d2c65636473612d736861322d6e697374703235362c65636473612d736861322d6e697374703338342c65636473612d736861322d6e697374703532312c7273612d736861322d3531322c7273612d736861322d3235362c7373682d7273612c7373682d6473732c7373682d65643235353139000000556165733132382d67636d406f70656e7373682e636f6d2c63686163686132302d706f6c7931333035406f70656e7373682e636f6d2c6165733132382d6374722c6165733139322d6374722c6165733235362d637472000000556165733132382d67636d406f70656e7373682e636f6d2c63686163686132302d706f6c7931333035406f70656e7373682e636f6d2c6165733132382d6374722c6165733139322d6374722c6165733235362d63747200000042686d61632d736861322d3235362d65746d406f70656e7373682e636f6d2c686d61632d736861322d3235362c686d61632d736861312c686d61632d736861312d393600000042686d61632d736861322d3235362d65746d406f70656e7373682e636f6d2c686d61632d736861322d3235362c686d61632d736861312c686d61632d736861312d3936000000046e6f6e65000000046e6f6e6500000000000000000000000000dcdd3b5297bd7bd792e8ee86fd42b7f4"
var serverinit = "000003b404145b1b58b87cb27a59a044201b938fbb4100000096637572766532353531392d736861323536406c69627373682e6f72672c656364682d736861322d6e697374703235362c656364682d736861322d6e697374703338342c656364682d736861322d6e697374703532312c6469666669652d68656c6c6d616e2d67726f75702d65786368616e67652d7368613235362c6469666669652d68656c6c6d616e2d67726f757031342d736861310000002f7373682d7273612c7373682d6473732c65636473612d736861322d6e697374703235362c7373682d656432353531390000006c6165733132382d6374722c6165733139322d6374722c6165733235362d6374722c6165733132382d67636d406f70656e7373682e636f6d2c6165733235362d67636d406f70656e7373682e636f6d2c63686163686132302d706f6c7931333035406f70656e7373682e636f6d0000006c6165733132382d6374722c6165733139322d6374722c6165733235362d6374722c6165733132382d67636d406f70656e7373682e636f6d2c6165733235362d67636d406f70656e7373682e636f6d2c63686163686132302d706f6c7931333035406f70656e7373682e636f6d000000d5756d61632d36342d65746d406f70656e7373682e636f6d2c756d61632d3132382d65746d406f70656e7373682e636f6d2c686d61632d736861322d3235362d65746d406f70656e7373682e636f6d2c686d61632d736861322d3531322d65746d406f70656e7373682e636f6d2c686d61632d736861312d65746d406f70656e7373682e636f6d2c756d61632d3634406f70656e7373682e636f6d2c756d61632d313238406f70656e7373682e636f6d2c686d61632d736861322d3235362c686d61632d736861322d3531322c686d61632d73686131000000d5756d61632d36342d65746d406f70656e7373682e636f6d2c756d61632d3132382d65746d406f70656e7373682e636f6d2c686d61632d736861322d3235362d65746d406f70656e7373682e636f6d2c686d61632d736861322d3531322d65746d406f70656e7373682e636f6d2c686d61632d736861312d65746d406f70656e7373682e636f6d2c756d61632d3634406f70656e7373682e636f6d2c756d61632d313238406f70656e7373682e636f6d2c686d61632d736861322d3235362c686d61632d736861322d3531322c686d61632d73686131000000156e6f6e652c7a6c6962406f70656e7373682e636f6d000000156e6f6e652c7a6c6962406f70656e7373682e636f6d0000000000000000000000000000000000"
var clientECDHEPubKey = "56adce8dd6706330441f8c72e75655376233590fe0f2296c41f6c985eb528318"
var serverECDHKey = ""

func main() {

	var packet []byte
	serverVersion := strtoByte("5353482d322e302d4f70656e5353485f372e340d0a")
	binaryPacket := ParseBinaryPacketProtocol(serverVersion)

	// Client Version
	packet = append(packet, clientSSHVersionString...)
	// Server Version
	packet = append(packet, binaryPacket[0].Payload...)
	// Client MSG Init
	binaryPacket = ParseBinaryPacketProtocol(strtoByte(clientInit))
	packet = append(packet, binaryPacket[0].Payload...)
	// Server MSG Init
	binaryPacket = ParseBinaryPacketProtocol(strtoByte(serverinit))
	packet = append(packet, binaryPacket[0].Payload...)
	// ECHDE Reply
	binaryPacket = ParseBinaryPacketProtocol(strtoByte("000001040a1f000000680000001365636473612d736861322d6e69737470323536000000086e6973747032353600000041049e55bbe9a7b90353ff795b4a8733e6f24a4950c216bc855921b2e0ab46fd86a490a7b6a0d9d99f2ba7057336c1efeb2c98ed02a1049a3106e44cdd0ea1cad1ef00000020e12bbd7bf5c136ae9aad535ca4b8b49d53369971196648a6838d5511eeec3c76000000640000001365636473612d736861322d6e697374703235360000004900000021008c11f0462f9226714d85e3c195a5243ec5e11301028b468e53d9d34a4ab9a9f90000002062274a5060f0f1ce8501599b7ceb600b9a414e1184c33dcbd0845897dd1cac3400000000000000000000"))
	_, i := ParseSSHPayload(binaryPacket[0].Payload)
	// Kex Host Key
	packet = append(packet, toByteArr(i.(ECDHEKeyExchaneReply).KEXHostKey)[4:]...)
	// Client ECDHE Public Key
	packet = append(packet, strtoByte(clientECDHEPubKey)...)
	// Server ECDHE Public Key
	packet = append(packet, i.(ECDHEKeyExchaneReply).ECDHEServerEphemeralPublicKey...)

	h := sha256.New()
	h.Write(packet)

	fmt.Printf("server public ecdhe key is %x\n", i.(ECDHEKeyExchaneReply).ECDHEServerEphemeralPublicKey)

	clientPrivateKey := strtoByte("753476258c776985e28152028bb12bd0a2fcc8cb75335e05438a451c919b705b")

	var p [32]byte
	copy(p[:], clientPrivateKey)

	secret := createSecret(copyTo32Byte(clientPrivateKey), copyTo32Byte(strtoByte("e12bbd7bf5c136ae9aad535ca4b8b49d53369971196648a6838d5511eeec3c76")))
	packet = append(packet, intTo4byte(len(secret))...)
	packet = append(packet, []byte{0x00}...)
	packet = append(packet, secret[:]...)
	fmt.Printf("%x\n", packet)

	b := bytes.Buffer{}
	b.Write(packet)

	fmt.Printf("packet is %x\n", b.Bytes())

	h.Write(intTo4byte(len(secret)))
	h.Write([]byte{0x00})
	h.Write(secret[:])
	fmt.Printf("sum is %x\n", h.Sum(nil))
}
